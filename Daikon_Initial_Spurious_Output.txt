Daikon version 4.6.4, released June 23, 2010; http://pag.csail.mit.edu/daikon.
Processing trace data; reading 1 dtrace file:                                  
[15:21:04]: Finished reading SeatReservationDemo.dtrace.gz                     
===========================================================================    
bookings.Customer:::OBJECT
===========================================================================
bookings.Customer.Customer():::EXIT
===========================================================================
bookings.Seat:::CLASS
===========================================================================
bookings.Seat:::OBJECT
this.row one of { 68, 69, 70 }
this.number one of { 5, 6, 7 }
bookings.Seat.MIN_ROW < this.row
bookings.Seat.MIN_ROW > this.number
bookings.Seat.MAX_ROW > this.row
bookings.Seat.MAX_ROW > this.number
bookings.Seat.MIN_NUMBER < this.row
bookings.Seat.MIN_NUMBER < this.number
bookings.Seat.MAX_NUMBER < this.row
bookings.Seat.MAX_NUMBER > this.number
this.row > this.number
===========================================================================
bookings.Seat.Seat(char, int):::ENTER
arg0 one of { 68, 69, 70 }
arg1 one of { 5, 6, 7 }
===========================================================================
bookings.Seat.Seat(char, int):::EXIT
this.row == orig(arg0)
this.number == orig(arg1)
===========================================================================
bookings.Seat.getNumber():::ENTER
===========================================================================
bookings.Seat.getNumber():::EXIT
this.row == orig(this.row)
this.number == return
return == orig(this.number)
return one of { 5, 6, 7 }
===========================================================================
bookings.Seat.getRow():::ENTER
===========================================================================
bookings.Seat.getRow():::EXIT
this.row == return
this.number == orig(this.number)
return == orig(this.row)
return one of { 68, 69, 70 }
===========================================================================
bookings.SeatReservationDemo.main(java.lang.String[]):::ENTER
arg0 has only one value
arg0.getClass() == java.lang.String[].class
arg0[] == []
arg0[].toString == []
===========================================================================
bookings.SeatReservationDemo.main(java.lang.String[]):::EXIT
arg0[] == orig(arg0[])
arg0[] == []
arg0[].toString == []
===========================================================================
bookings.SeatReservationManager:::OBJECT
this has only one value
this.seatReservations has only one value
this.seatReservations != null
this.seatReservations.getClass() == bookings.Customer[][].class
this.seatReservations[] contains no nulls and has only one value, of length 7
this.seatReservations[] elements != null
size(this.seatReservations[]) == 7
===========================================================================
bookings.SeatReservationManager.SeatReservationManager():::EXIT
===========================================================================
bookings.SeatReservationManager.isReserved(bookings.Seat):::ENTER
arg0.row one of { 68, 69, 70 }
arg0.number one of { 5, 6, 7 }
this.seatReservations[bookings.Seat.MIN_NUMBER] has only one value
this.seatReservations[bookings.Seat.MIN_NUMBER-1] has only one value
===========================================================================
bookings.SeatReservationManager.isReserved(bookings.Seat):::EXIT
this.seatReservations == orig(this.seatReservations)
this.seatReservations[] == orig(this.seatReservations[])
arg0.row == orig(arg0.row)
arg0.number == orig(arg0.number)
arg0.row one of { 68, 69, 70 }
arg0.number one of { 5, 6, 7 }
return == false
this.seatReservations[bookings.Seat.MIN_NUMBER] has only one value
this.seatReservations[bookings.Seat.MIN_NUMBER-1] has only one value
this.seatReservations.getClass() == orig(this.seatReservations.getClass())
===========================================================================
bookings.SeatReservationManager.isReserved(bookings.Seat):::EXIT;condition="not(return == true)"
===========================================================================
bookings.SeatReservationManager.numberToIndex(int):::ENTER
===========================================================================
bookings.SeatReservationManager.numberToIndex(int):::EXIT
return - orig(arg0) + 1 == 0
===========================================================================
bookings.SeatReservationManager.reserve(bookings.Seat, bookings.Customer):::ENTER
arg0.row one of { 68, 69, 70 }
arg0.number one of { 5, 6, 7 }
this.seatReservations[bookings.Seat.MIN_NUMBER] has only one value
this.seatReservations[bookings.Seat.MIN_NUMBER-1] has only one value
===========================================================================
bookings.SeatReservationManager.reserve(bookings.Seat, bookings.Customer):::EXIT
this.seatReservations == orig(this.seatReservations)
this.seatReservations[] == orig(this.seatReservations[])
arg0.row == orig(arg0.row)
arg0.number == orig(arg0.number)
arg0.row one of { 68, 69, 70 }
arg0.number one of { 5, 6, 7 }
this.seatReservations[bookings.Seat.MIN_NUMBER] has only one value
this.seatReservations[bookings.Seat.MIN_NUMBER-1] has only one value
this.seatReservations.getClass() == orig(this.seatReservations.getClass())
===========================================================================
bookings.SeatReservationManager.rowToIndex(char):::ENTER
===========================================================================
bookings.SeatReservationManager.rowToIndex(char):::EXIT
return - orig(arg0) + 65 == 0
Exiting Daikon.

